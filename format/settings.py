"""
Django settings for format project.

Generated by 'django-admin startproject' using Django 5.2.7.
"""

import os
from pathlib import Path
from decouple import config, Csv, RepositoryEnv

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# --- Configuration for Reading config.env File ---
# Explicitly set the location of the environment file for robustness.
CONFIG_FILE = BASE_DIR / 'config.env'

# Check if the config file exists and load variables from it
if CONFIG_FILE.exists():
    config = config.get_config(RepositoryEnv(str(CONFIG_FILE)))
else:
    # Fallback to system environment variables if config.env is missing
    print(f"Warning: config.env not found at {CONFIG_FILE}. Relying on system environment variables.")
# ------------------------------------------


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# Reads SECRET_KEY from config.env
SECRET_KEY = config('SECRET_KEY', default='django-insecure-default-fallback-key')

# SECURITY WARNING: don't run with debug turned on in production!
# Reads DEBUG from config.env (casts to boolean)
DEBUG = config('DEBUG', default=True, cast=bool)

# Reads ALLOWED_HOSTS from config.env (casts to list using Csv)
# ALLOWED_HOSTS = config('ALLOWED_HOSTS', default='*', cast=Csv())
# ... (rest of your file remains the same)

# Allow all hosts for development (includes LAN IP)
ALLOWED_HOSTS = ['*']

# CORS (keep as is, but ensure it's after ALLOWED_HOSTS)
CORS_ALLOW_ALL_ORIGINS = True  # For testing; later use the list below
CORS_ALLOWED_ORIGINS = [
    "http://localhost:3000",
    "http://127.0.0.1:3000",
    "http://192.168.1.17:3000",
]

# ... (end of file)
# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'corsheaders',  # Required for frontend communication
    'api',
    
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',  # Must be placed high
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'format.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'format.wsgi.application'

# AI/API Configuration
# Reads GEMINI_API_KEY from config.env
GEMINI_API_KEY = config('GEMINI_API_KEY', default='')

# Define the model to be used for structured extraction (Hardcoded, as it rarely changes)
GEMINI_MODEL = 'gemini-2.5-flash-preview-05-20'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'